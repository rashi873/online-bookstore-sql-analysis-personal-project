## QUERY 1 
## Total revenue generated by the store.

SELECT SUM(Total_amount) AS Total_revenue
FROM Sales;

## QUERY 2
## Top 5 best-selling books (by quantity sold).

SELECT b.Title ,SUM(s.Quantity)
FROM Sales s 
JOIN Books b
ON b.Book_id = s.Book_id
GROUP BY b.Title
ORDER BY SUM(s.Quantity) DESC
LIMIT 5 ;

## QUERY 3
## Average spending per customer.

SELECT Customer_id, AVG(Total_amount) AS average_spending
FROM Sales 
GROUP BY Customer_id;

## QUERY 4
## Monthly revenue trend (GROUP BY month).

SELECT MONTHNAME(Sale_date) AS Month_name, SUM(Total_amount) AS Monthly_revenue
FROM Sales
GROUP BY Month_name;

## QUERY 5
## Most popular category by sales volume.

SELECT c.Category_name AS Popular_Category, SUM(Total_amount) 
FROM Sales s 
JOIN Books b
ON s.Book_id = b.Book_id
JOIN Categories c 
ON c.Category_id = b.Category_id
GROUP BY Popular_Category
ORDER BY SUM(Total_amount)DESC
LIMIT 1;

## QUERY 6
## City-wise sales performance.

SELECT c.City , SUM(Total_amount) AS city_wise_sales
FROM Customers c
JOIN Sales s
ON c.Customer_id = s.Customer_id
GROUP BY c.City;

## QUERY 7
## Age group analysis — average order value by age range (e.g., 18–30, 31–50, 50+).

-- Age group analysis — Average Order Value (AOV) by age range
SELECT 
    CASE 
        WHEN c.Age BETWEEN 18 AND 30 THEN '18–30'
        WHEN c.Age BETWEEN 31 AND 50 THEN '31–50'
        ELSE '50+'
    END AS Age_Group,
    ROUND(AVG(s.Total_amount), 2) AS Avg_Order_Value
FROM Sales s
JOIN Customers c 
    ON s.Customer_id = c.Customer_id
GROUP BY Age_Group
ORDER BY Age_Group;


## QUERY 8
## Customers who bought more than 3 different books.

SELECT  c.Customer_id, c.Name,COUNT(DISTINCT s.Book_id)
FROM Sales s
JOIN Customers c
ON s.Customer_id = c.Customer_id
GROUP BY c.Customer_id, c.Name
HAVING COUNT(DISTINCT s.Book_id) > 3;

## QUERY 9
## Books that were never sold.

SELECT *
FROM Books b 
LEFT JOIN Sales s
ON s.Book_id = b.Book_id 
WHERE s.Sale_id IS NULL;


## QUERY 10
## Top 3 customers by total spending.

SELECT c.Customer_id, SUM(s.Total_amount) AS Total_spending
FROM Sales s
JOIN Customers c
ON s.Customer_id = c.Customer_id
GROUP BY c.Customer_id
ORDER BY Total_spending DESC
LIMIT 3;



